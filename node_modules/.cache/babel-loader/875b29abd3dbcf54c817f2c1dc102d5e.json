{"ast":null,"code":"var _jsxFileName = \"/Users/jiali/project/reactPractice2/customhook/src/components/Cat.js\",\n  _s = $RefreshSig$();\nimport { useGetCat } from \"../useGetCat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Cat = () => {\n  _s();\n  var _catData;\n  const {\n    data,\n    isCatLoading,\n    refetchData\n  } = useGetCat();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", (_catData = catData) === null || _catData === void 0 ? void 0 : _catData.fact, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_s(Cat, \"P/xZl1OWAerXHTa221SayqZJga4=\", false, function () {\n  return [useGetCat];\n});\n_c = Cat;\nvar _c;\n$RefreshReg$(_c, \"Cat\");","map":{"version":3,"names":["useGetCat","Cat","data","isCatLoading","refetchData","catData","fact"],"sources":["/Users/jiali/project/reactPractice2/customhook/src/components/Cat.js"],"sourcesContent":["import {useGetCat} from \"../useGetCat\";\nexport const Cat = () => {\n    const {data, isCatLoading, refetchData} = useGetCat();\n\n    return (\n        <div>\n            <h1> {catData?.fact} </h1>\n        </div>\n    )\n}\n"],"mappings":";;AAAA,SAAQA,SAAS,QAAO,cAAc;AAAC;AACvC,OAAO,MAAMC,GAAG,GAAG,MAAM;EAAA;EAAA;EACrB,MAAM;IAACC,IAAI;IAAEC,YAAY;IAAEC;EAAW,CAAC,GAAGJ,SAAS,EAAE;EAErD,oBACI;IAAA,uBACI;MAAA,4BAAMK,OAAO,6CAAP,SAASC,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA;EAAO;IAAA;IAAA;IAAA;EAAA,QACxB;AAEd,CAAC;AAAA,GARYL,GAAG;EAAA,QAC8BD,SAAS;AAAA;AAAA,KAD1CC,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}