{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport const useCount = function () {\n  _s();\n  let initialVal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  const [count, setCount] = useState(initialVal);\n  const increase = () => {\n    setCount(prev => prev + 1);\n  };\n  const decrease = () => {\n    setCount(prev => prev - 1);\n  };\n  const reset = () => {\n    setCount(0);\n  };\n  return {\n    count,\n    increase,\n    decrease,\n    reset\n  };\n};\n_s(useCount, \"Od6edXH8UCgD8U/cJdyIrykA51k=\");","map":{"version":3,"names":["useState","useCount","initialVal","count","setCount","increase","prev","decrease","reset"],"sources":["/Users/jiali/project/reactPractice2/customhook/src/components/useCount.js"],"sourcesContent":["import {useState} from \"react\";\n\nexport const useCount = (initialVal = 0) => {\n    const [count, setCount] = useState(initialVal);\n\n    const increase = () => {\n        setCount((prev)=> prev +1);\n    };\n\n    const decrease = () => {\n        setCount((prev)=>prev-1);\n    };\n\n    const reset = () => {\n        setCount(0);\n    }\n\nreturn {count, increase, decrease, reset};\n}"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,OAAO,MAAMC,QAAQ,GAAG,YAAoB;EAAA;EAAA,IAAnBC,UAAU,uEAAG,CAAC;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAACE,UAAU,CAAC;EAE9C,MAAMG,QAAQ,GAAG,MAAM;IACnBD,QAAQ,CAAEE,IAAI,IAAIA,IAAI,GAAE,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAM;IACnBH,QAAQ,CAAEE,IAAI,IAAGA,IAAI,GAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAME,KAAK,GAAG,MAAM;IAChBJ,QAAQ,CAAC,CAAC,CAAC;EACf,CAAC;EAEL,OAAO;IAACD,KAAK;IAAEE,QAAQ;IAAEE,QAAQ;IAAEC;EAAK,CAAC;AACzC,CAAC;AAAA,GAhBYP,QAAQ"},"metadata":{},"sourceType":"module"}